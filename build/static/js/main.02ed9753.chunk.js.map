{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","methods","getAll","a","request","axios","get","response","data","addPerson","newPerson","post","updateNumber","id","updatedPerson","put","deletePerson","delete","Filter","searchName","onSearch","type","value","onChange","PersonForm","submit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","required","Persons","persons","onDelete","map","person","name","number","onClick","Notification","notifType","message","className","App","useState","setPersons","setNewName","setNewNumber","setSearchName","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","then","initialPersons","handleDelete","personToDelete","find","window","confirm","newListPersons","searchedNames","filter","toLowerCase","includes","event","target","preventDefault","personToUpdate","returnedPerson","setTimeout","catch","error","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02ed9753.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = async () => {\n    const request = axios.get(baseUrl);\n    const response = await request;\n    return response.data;\n}\n\nconst addPerson = async (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    const response = await request;\n    return response.data;\n}\n\nconst updateNumber = async (id, updatedPerson) => {\n    const request =  axios.put(`${baseUrl}/${id}`, updatedPerson);\n    const response = await request;\n    return response.data;\n}\n\nconst deletePerson = async (id) => {\n    await axios.delete(`${baseUrl}/${id}`)\n}\n\nconst methods = { getAll, addPerson, updateNumber, deletePerson }\n\nexport default methods","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nconst Filter = ({ searchName, onSearch }) => {\n  return (\n    <div>\n      <span>\n        search contact:{\" \"}\n        <input type=\"text\" value={searchName} onChange={onSearch} />\n      </span>\n    </div>\n  );\n};\n\nconst PersonForm = ({\n  submit,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={submit}>\n      <div>\n        name:{\" \"}\n        <input\n          type=\"text\"\n          value={newName}\n          onChange={handleNameChange}\n          required\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          type=\"text\"\n          value={newNumber}\n          onChange={handleNumberChange}\n          required\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = ({ persons, onDelete }) => {\n  return (\n    <ul>\n      {persons.map((person) => (\n        <li key={person.name}>\n          {person.name} {person.number} <button onClick={() => onDelete(person.id)}>delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst Notification = ({ notifType, message }) => {\n  if(message === null) {\n    return null\n  }\n  return (\n    <div className={notifType}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      });\n  }, []);\n\n  const submit = (event) => {\n    event.preventDefault();\n    if (persons.map((person) => person.name).includes(newName)) {\n      const personToUpdate = persons.find(person => person.name === newName);\n      const updatedPerson = {\n        ...personToUpdate,\n        number: newNumber\n      };\n      const confirm = window.confirm(`${newName} is already in the phonebook, update number instead?`);\n      if(confirm) {\n        personService\n          .updateNumber(personToUpdate.id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== personToUpdate.id ? person : returnedPerson));\n            setSuccessMessage(`${returnedPerson.name}'s number was updated`);\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${personToUpdate.name} has already been removed from server`);\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000);\n            setPersons(persons.filter(person => person.id !== personToUpdate.id))\n          });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n      personService\n        .addPerson(personObject)\n        .then(returnedPerson => {\n          setSuccessMessage(`Added ${returnedPerson.name}`)\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n    }\n  };\n  const handleDelete = async (id) => {\n    const personToDelete = persons.find(person => person.id === id);\n    const confirm = window.confirm(`Delete ${personToDelete.name}?`);\n    if(confirm) {\n      await personService\n        .deletePerson(id);\n      const newListPersons = personService.getAll();\n      const persons = await newListPersons;\n      setPersons(persons);\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const onSearch = (event) => {\n    setSearchName(event.target.value);\n  };\n\n  const searchedNames = persons.filter((person) =>\n    person.name.toLowerCase().includes(searchName.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} notifType=\"success\" />\n      <Notification message={errorMessage} notifType=\"error\" />\n      <Filter searchName={searchName} onSearch={onSearch} />\n      <h3>Add a new contact</h3>\n      <PersonForm\n        submit={submit}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={searchedNames} onDelete={handleDelete}/>\n    </div>\n  );\n};\n\nexport default App;","import './index.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}