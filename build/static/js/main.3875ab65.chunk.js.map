{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","methods","getAll","a","request","axios","get","response","data","addPerson","newPerson","post","updateNumber","id","updatedPerson","put","deletePerson","delete","Filter","searchName","onSearch","type","value","onChange","PersonForm","submit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","required","Persons","persons","onDelete","map","person","name","number","onClick","Notification","notifType","message","className","App","useState","setPersons","setNewName","setNewNumber","setSearchName","successMessage","setSuccessMessage","errorMessage","setErrorMessage","nameValidationMessage","setNameValidationMessage","numberValidationMessage","setNumberValidationMessage","useEffect","personService","then","initialPersons","handleDelete","personToDelete","find","window","confirm","newListPersons","searchedNames","filter","toLowerCase","includes","event","target","preventDefault","personToUpdate","returnedPerson","setTimeout","catch","error","personObject","concat","messages","split","nameValidation","numberValidation","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3875ab65.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = async () => {\n    const request = axios.get(baseUrl);\n    const response = await request;\n    return response.data;\n}\n\nconst addPerson = async (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    const response = await request;\n    return response.data;\n}\n\nconst updateNumber = async (id, updatedPerson) => {\n    const request =  axios.put(`${baseUrl}/${id}`, updatedPerson);\n    const response = await request;\n    return response.data;\n}\n\nconst deletePerson = async (id) => {\n    await axios.delete(`${baseUrl}/${id}`)\n}\n\nconst methods = { getAll, addPerson, updateNumber, deletePerson }\n\nexport default methods","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nconst Filter = ({ searchName, onSearch }) => {\n  return (\n    <div>\n      <span>\n        search contact:{\" \"}\n        <input type=\"text\" value={searchName} onChange={onSearch} />\n      </span>\n    </div>\n  );\n};\n\nconst PersonForm = ({\n  submit,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={submit}>\n      <div>\n        name:{\" \"}\n        <input\n          type=\"text\"\n          value={newName}\n          onChange={handleNameChange}\n          required\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          type=\"text\"\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = ({ persons, onDelete }) => {\n  return (\n    <ul>\n      {persons.map((person) => (\n        <li key={person.name}>\n          {person.name} {person.number} <button onClick={() => onDelete(person.id)}>delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst Notification = ({ notifType, message }) => {\n  if(message === null) {\n    return null\n  }\n  return (\n    <div className={notifType}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [nameValidationMessage, setNameValidationMessage] = useState(null)\n  const [numberValidationMessage, setNumberValidationMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      });\n  }, []);\n\n  const submit = (event) => {\n    event.preventDefault();\n    if (persons.map((person) => person.name).includes(newName)) {\n      const personToUpdate = persons.find(person => person.name === newName);\n      const updatedPerson = {\n        ...personToUpdate,\n        number: newNumber\n      };\n      const confirm = window.confirm(`${newName} is already in the phonebook, update number instead?`);\n      if(confirm) {\n        personService\n          .updateNumber(personToUpdate.id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== personToUpdate.id ? person : returnedPerson));\n            setSuccessMessage(`${returnedPerson.name}'s number was updated`);\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${personToUpdate.name} has already been removed from server`);\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000);\n            setPersons(persons.filter(person => person.id !== personToUpdate.id))\n          });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n      personService\n        .addPerson(personObject)\n        .then(returnedPerson => {\n          setSuccessMessage(`Added ${returnedPerson.name}`)\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          const errorMessage = error.response.data.error\n          const messages = errorMessage.split(',')\n          const nameValidation = messages[0].split(':')[2]\n          const numberValidation = messages[1]\n          setNameValidationMessage(nameValidation)\n          if(numberValidation === undefined) {\n            setNumberValidationMessage(null)\n          } else {\n            const numberValidationMessage = numberValidation.split(':')[1]\n            setNumberValidationMessage(numberValidationMessage)\n          }\n          setTimeout(() => {\n            setNameValidationMessage(null)\n            setNumberValidationMessage(null)\n          }, 5000)\n        })\n    }\n  };\n  const handleDelete = async (id) => {\n    const personToDelete = persons.find(person => person.id === id);\n    const confirm = window.confirm(`Delete ${personToDelete.name}?`);\n    if(confirm) {\n      await personService\n        .deletePerson(id);\n      const newListPersons = personService.getAll();\n      const persons = await newListPersons;\n      setPersons(persons);\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const onSearch = (event) => {\n    setSearchName(event.target.value);\n  };\n\n  const searchedNames = persons.filter((person) =>\n    person.name.toLowerCase().includes(searchName.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} notifType=\"success\" />\n      <Notification message={errorMessage} notifType=\"error\" />\n      <Notification message={nameValidationMessage} notifType=\"error\" />\n      <Notification message={numberValidationMessage} notifType=\"error\" />\n      <Filter searchName={searchName} onSearch={onSearch} />\n      <h3>Add a new contact</h3>\n      <PersonForm\n        submit={submit}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={searchedNames} onDelete={handleDelete}/>\n    </div>\n  );\n};\n\nexport default App;","import './index.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}